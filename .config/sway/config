# Default config for sway
#
# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.

### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l
# Your preferred terminal emulator
# set $term alacritty
set $term foot
# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
# set $menu dmenu_path | dmenu | xargs swaymsg exec --
# set $menu wofi --show run | xargs swaymsg exec --
# set $menu "fuzzel -f 'M+ 1mn:size=10' -P '*>  '"
set $menu "fuzzel -f 'Monoid:size=10' -P '*>  '"

### Output configuration
#
# Default wallpaper (more resolutions are available in /usr/local/share/backgrounds/sway/)
# output * bg /usr/local/share/backgrounds/sway/Sway_Wallpaper_Blue_1920x1080.png fill
# output * bg #212121 solid_color
output * bg /home/peregrinator/wallpapers/void_purple.png fill

#
# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs

### Idle configuration
#
# Example configuration:
#
# exec swayidle -w \
#          timeout 300 'swaylock -f -c 000000' \
#          timeout 600 'swaymsg "output * dpms off"' resume 'swaymsg "output * dpms on"' \
#          before-sleep 'swaylock -f -c 000000'
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

### Input configuration
#
# Example configuration:
#
#   input "2:14:SynPS/2_Synaptics_TouchPad" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

# touchpad configuration
input "1739:0:Synaptics_TM3127-001" {
dwt enabled
tap enabled
natural_scroll enabled
middle_emulation enabled
}

# touchpad toggle
bindsym F4 swaymsg input type:touchpad events toggle enabled disabled && notify-send "Touchpad disabled"

# remapping keys for emacs pinky and all
# 1. disable capslock & replace with ctrl
# 2. rupee sign on R (not sure how this should work)
input * xkb_options ctrl:none,caps:ctrl_modifier,rupeesign:r
# disable left ctrl key?

# numlockx replacement
input * xkb_numlock enable

# unclutter replacement (hides mouse cursor?)
seat * hide_cursor 8000

#
### Key bindings
#
# Basics:
#
    # Start a terminal
    bindsym $mod+Shift+Return exec $term

    # Kill focused window
    bindsym $mod+Shift+q kill

    # Start your launcher
    bindsym $mod+p exec $menu

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Shift+c reload

    # Exit sway (logs you out of your Wayland session)
    bindsym $mod+Shift+Escape exec 'swaymsg exit'
#
# Moving around:
#
    # Move your focus around
    # bindsym $mod+$left focus left
    # bindsym $mod+$down focus down
    # bindsym $mod+$up focus up
    # bindsym $mod+$right focus right

    bindsym $mod+Tab exec ~/.config/sway/switchView.py next
    bindsym $mod+Shift+Tab exec ~/.config/sway/switchView.py prev

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right

#
# Workspaces:
#
    # Switch to workspace
    # bindsym $mod+1 workspace number 1
    # bindsym $mod+2 workspace number 2
    # bindsym $mod+3 workspace number 3
    # bindsym $mod+4 workspace number 4
    # bindsym $mod+5 workspace number 5

    # sov is sway overview for workspaces
    bindsym --no-repeat $mod+1 workspace number 1; exec "echo 1 > /tmp/sovpipe"
    bindsym --no-repeat $mod+2 workspace number 2; exec "echo 1 > /tmp/sovpipe"
    bindsym --no-repeat $mod+3 workspace number 3; exec "echo 1 > /tmp/sovpipe"
    bindsym --no-repeat $mod+4 workspace number 4; exec "echo 1 > /tmp/sovpipe"
    bindsym --no-repeat $mod+5 workspace number 5; exec "echo 1 > /tmp/sovpipe"

    bindsym --release $mod+1 exec "echo 0 > /tmp/sovpipe"
    bindsym --release $mod+2 exec "echo 0 > /tmp/sovpipe"
    bindsym --release $mod+3 exec "echo 0 > /tmp/sovpipe"
    bindsym --release $mod+4 exec "echo 0 > /tmp/sovpipe"
    bindsym --release $mod+5 exec "echo 0 > /tmp/sovpipe"

    # Move window to workspace
    bindsym $mod+Shift+1 move container to workspace number 1
    bindsym $mod+Shift+2 move container to workspace number 2
    bindsym $mod+Shift+3 move container to workspace number 3
    bindsym $mod+Shift+4 move container to workspace number 4
    bindsym $mod+Shift+5 move container to workspace number 5

#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+b splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+Shift+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+Return focus parent
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    # bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    # bindsym $mod+minus scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

#
# FN keys:
#
bindsym XF86MonBrightnessDown exec brightnessctl set 5%- | sed -En 's/.*\(([0-9]+)%\).*/\1/p' > $WOBSOCK
bindsym XF86MonBrightnessUp exec brightnessctl set +5% | sed -En 's/.*\(([0-9]+)%\).*/\1/p' > $WOBSOCK

bindsym XF86AudioRaiseVolume exec pactl set-sink-volume @DEFAULT_SINK@ +5% && pactl get-sink-volume @DEFAULT_SINK@ | head -n 1| awk '{print substr($5, 1, length($5)-1)}' > $WOBSOCK
bindsym XF86AudioLowerVolume exec pactl set-sink-volume @DEFAULT_SINK@ -5% && pactl get-sink-volume @DEFAULT_SINK@ | head -n 1 | awk '{print substr($5, 1, length($5)-1)}' > $WOBSOCK
bindsym XF86AudioMute exec pactl set-sink-mute @DEFAULT_SINK@ toggle && pactl get-sink-volume @DEFAULT_SINK@ | head -n 1 | awk '{print substr($5, 1, length($5)-1)}' > $WOBSOCK

#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
# bar {
#     position top

#     # When the status_command prints a new line to stdout, swaybar updates.
#     # The default just shows the current date and time.
#     # status_command while date +'%H:%M'; do sleep 1; done
#     # status_command while ~/.config/sway/status.sh; do sleep 60; done

#     swaybar_command "waybar -c /home/peregrinator/.config/waybar/config-sway &"

#     # colors {
#     #     statusline #ffffff
#     #     background #323232
#     #     inactive_workspace #323232 #323232 #ffffff
#     # }
# }

#
# Appearance
#

default_border pixel 2
smart_gaps on
smart_borders on
hide_edge_borders vertical

default_floating_border pixel 2

# gaps
gaps inner 5px
gaps outer 0px

# colours
# class       		 	border   background  text     indicator
client.focused 			#ffffff  #ffffff     #000000  #ffffff
client.focused_inactive  	#ffffff  #ffffff     #666666  #ffffff
client.unfocused         	#888888  #888888     #ffffff  #888888
client.urgent            	#ffff00  #ffff00     #ffffff  #ffff00

#
# Autostart?
#

# sway overview startup
exec rm -f /tmp/sovpipe && mkfifo /tmp/sovpipe && tail -f /tmp/sovpipe | sov &

# fnott starts with this command but segfaults
# see https://codeberg.org/dnkl/fnott/issues/66
# exec fnott &
exec mako &

# nightlight
exec rdshft &

# volume/brightness bar overlay
# exec wob_fifo &
set $WOBSOCK "$XDG_RUNTIME_DIR/wob.sock"
exec rm -f $WOBSOCK && mkfifo $WOBSOCK && tail -f $WOBSOCK | wob &

# waybar because it seemingly doesn't start with the bar {} section
exec waybar -c /home/peregrinator/.config/waybar/config-sway &

include /usr/local/etc/sway/config.d/*
